// Generated by ts-to-zod
import { z } from "zod";

export const iConfigAssetTargetSchema = z.object({
  hint: z
    .union([
      z.literal("audio"),
      z.literal("image"),
      z.literal("bitmapFont"),
      z.literal("binary"),
      z.literal("css"),
      z.string(),
    ])
    .optional(),
  key: z.string(),
  basePath: z.string(),
  extensions: z.union([z.string(), z.boolean()]),
  ignoredPaths: z.union([z.string(), z.array(z.string())]).optional(),
});

export const iConfigSchema = z.object({
  extensions: z.string().optional(),
  targets: z.array(iConfigAssetTargetSchema),
});

export const iPhaserFilePackAssetSchema = z.object({
  type: z.string(),
  key: z.string(),
  url: z.union([z.string(), z.array(z.string())]),
});

export const iPhaserFilePackFilesSchema = z.object({
  files: z.array(iPhaserFilePackAssetSchema),
});

export const filePackSchema = z
  .object({
    meta: z.object({
      generated: z.number(),
    }),
  })
  .and(z.record(iPhaserFilePackFilesSchema));
